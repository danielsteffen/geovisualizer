/*
 * TFPColorRuleClassification.java 
 *
 * Created by DFKI AV on 07.03.2012.
 * Copyright (c) 2011-2013 DFKI GmbH, Kaiserslautern. All rights reserved.
 * Use is subject to license terms.
 */
package de.dfki.av.geovisualizer.core.functions.ui;

import de.dfki.av.geovisualizer.core.AbstractTransferFunctionPanel;
import de.dfki.av.geovisualizer.core.functions.ColorRuleClassification;
import de.dfki.av.geovisualizer.core.functions.NumberInterval;
import java.awt.Color;
import java.util.Iterator;
import java.util.List;
import javax.swing.JColorChooser;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Daniel Steffen <daniel.steffen at dfki.de>
 */
public class TFPColorRuleClassification extends AbstractTransferFunctionPanel implements TableModelListener {

    /**
     *
     */
    private ClassificationTableModel tableModel;
    /**
     *
     */
    private ColorRuleClassification function;

    /**
     * Creates new form TFPColorRuleClassification
     */
    public TFPColorRuleClassification(final ColorRuleClassification f) {

        this.function = f;
        this.tableModel = new ClassificationTableModel();
        this.tableModel.addTableModelListener(this);

        initComponents();
//        jRadioButton1.setActionCommand(f.getClass().getName());

        jTable1.setDefaultRenderer(Color.class, new ColorRenderer(true));
        jTable1.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jPanel1.border.title"))); // NOI18N

        jLabel5.setLabelFor(jTextField4);
        jLabel5.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jLabel5.text")); // NOI18N

        jLabel6.setLabelFor(jTextField5);
        jLabel6.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jLabel6.text")); // NOI18N

        jLabel7.setLabelFor(jTextField6);
        jLabel7.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jLabel7.text")); // NOI18N

        jTextField4.setColumns(10);
        jTextField4.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jTextField4.text")); // NOI18N
        jTextField4.setNextFocusableComponent(jTextField5);

        jTextField5.setColumns(10);
        jTextField5.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jTextField5.text")); // NOI18N
        jTextField5.setNextFocusableComponent(jTextField6);
        jTextField5.setOpaque(false);

        jTextField6.setEditable(false);
        jTextField6.setColumns(6);
        jTextField6.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jTextField6.text")); // NOI18N
        jTextField6.setNextFocusableComponent(jSlider1);
        jTextField6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField6MouseClicked(evt);
            }
        });

        jButton1.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jButton1.text")); // NOI18N
        jButton1.setNextFocusableComponent(jTextField4);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jLabel8.text")); // NOI18N

        jSlider1.setMajorTickSpacing(122);
        jSlider1.setMaximum(255);
        jSlider1.setPaintTicks(true);
        jSlider1.setValue(0);
        jSlider1.setNextFocusableComponent(jButton1);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jLabel1.text")); // NOI18N

        jLabel9.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jLabel9.text")); // NOI18N

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable1.setColumnSelectionAllowed(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9))
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText(org.openide.util.NbBundle.getMessage(TFPColorRuleClassification.class, "TFPColorRuleClassification.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Object[] classdef = new Object[4];
        classdef[0] = jTextField4.getText();
        classdef[1] = jTextField5.getText();
        Color c = jTextField6.getBackground();
        int transparency = 255 - jSlider1.getValue();
        classdef[2] = new Color(c.getRed(), c.getGreen(), c.getBlue(), transparency);
        tableModel.addRow(classdef);
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setBackground(Color.white);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField6MouseClicked
        Color c = JColorChooser.showDialog(this, "Choose your color", jTextField6.getBackground());
        if (c != null) {
            jTextField6.setBackground(c);
        }
    }//GEN-LAST:event_jTextField6MouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getSelectedAttribute() {
        return (String) jComboBox1.getSelectedItem();
    }

    @Override
    public void tableChanged(TableModelEvent e) {
        function.clear();
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            String min = (String) tableModel.getValueAt(i, 0);
            String max = (String) tableModel.getValueAt(i, 1);
            Color color = (Color) tableModel.getValueAt(i, 2);
            Double d0 = Double.parseDouble(min);
            Double d1 = Double.parseDouble(max);
            NumberInterval n = new NumberInterval(d0, d1);
            function.addClassification(n, color);
        }
    }

    @Override
    public boolean setAttributes(List<String[]> attributes) {
        for (Iterator<String[]> it = attributes.iterator(); it.hasNext();) {
            String[] attribute = it.next();
            if (!attribute[1].equalsIgnoreCase("String")) {
                jComboBox1.addItem(attribute[0]);
            }
        }
        return jComboBox1.getItemCount() > 0 ? true : false;
    }
}
