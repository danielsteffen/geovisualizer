/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dfki.av.sudplan.vis.wiz.tfpanels;

import com.dfki.av.sudplan.vis.algorithm.functions.ConstantColorTransferFunction;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JColorChooser;

/**
 *
 * @author steffen
 */
public class TFPConstantColorTransferFunction extends javax.swing.JPanel implements TFPanel {

    private ConstantColorTransferFunction function;

    /**
     * Creates new form TFPConstantColorTransferFunction
     */
    public TFPConstantColorTransferFunction(final ConstantColorTransferFunction f, final List<String> attributes, ButtonGroup bg, ActionListener l) {
        this.function = f;
        initComponents();

        jRadioButton.setActionCommand(f.getClass().getSimpleName());
        jRadioButton.addActionListener(l);
        bg.add(jRadioButton);
//        bg.setSelected(jRadioButton.getModel(), true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();

        jRadioButton.setText(org.openide.util.NbBundle.getMessage(TFPConstantColorTransferFunction.class, "TFPConstantColorTransferFunction.jRadioButton.text")); // NOI18N

        jTextField1.setEditable(false);
        jTextField1.setText(org.openide.util.NbBundle.getMessage(TFPConstantColorTransferFunction.class, "TFPConstantColorTransferFunction.jTextField1.text")); // NOI18N
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        Color c = JColorChooser.showDialog(this, "Choose your color", function.getColor());
        if (c != null) {
            jTextField1.setBackground(c);
            function.setColor(c);
        }
    }//GEN-LAST:event_jTextField1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton jRadioButton;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getSelectedAttribute() {
        return "<<NO_ATTRIBUTE>>";
    }
}
