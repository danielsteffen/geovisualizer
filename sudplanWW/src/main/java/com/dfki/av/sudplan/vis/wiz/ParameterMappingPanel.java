package com.dfki.av.sudplan.vis.wiz;

import com.dfki.av.sudplan.vis.algorithm.IVisAlgorithm;
import com.dfki.av.sudplan.vis.algorithm.VisParameter;
import java.io.File;
import java.util.Iterator;
import javax.swing.JPanel;

public final class ParameterMappingPanel extends JPanel {

    private File file;
    private IVisAlgorithm visAlgorithm;
    private String[] attributes;
    
    /** Creates new form ParameterMappingPanel */
    public ParameterMappingPanel(IVisAlgorithm algo) {
        initComponents();
    }

    @Override
    public String getName() {
        return "Parameter Mapping";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public String[] getAttributes(){
        return this.attributes;
    }
    
    public void setSelectedFile(File f){
        this.file = f;
    }
    
    public void setSelectedVisualization(IVisAlgorithm i){
        this.visAlgorithm = i;
        this.removeAll();
        for (Iterator<VisParameter> it = visAlgorithm.getVisParameter().iterator(); it.hasNext();) {
            VisParameter param = it.next();
            AttributePanel p = new AttributePanel(param.getName());
            this.add(p);
        }
        this.updateUI();
    }
}
